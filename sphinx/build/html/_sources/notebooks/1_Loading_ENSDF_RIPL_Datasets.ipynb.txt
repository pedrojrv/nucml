{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Reference Input Parameter Library (RIPL)\n",
    "\n",
    "The Reference Input Parameter Library (RIPL) contains nuclear strcuture information. These files are much easier to parse and maniuplate than their source, the Experimental Nuclear Structure Database (XUNDL). XUNDL files are not directly supported for now. Let us get an overview of what `NucML` can do for us. Let us begin, as always, by importing the `nucml.datasets` module."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:39.284473Z",
     "start_time": "2021-02-23T19:06:39.282473Z"
    }
   },
   "outputs": [],
   "source": [
    "# PROTOTYPE\n",
    "import sys\n",
    "sys.path.append(\"../..\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:40.543898Z",
     "start_time": "2021-02-23T19:06:39.315294Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import nucml.datasets as nuc_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## RIPL/XUNDL Headers\n",
    "\n",
    "The RIPL headers are the most basic information in terms of nuclear structure. It includes the elements, the number of levels and gammas available, and the neutron and proton separation energy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:40.553899Z",
     "start_time": "2021-02-23T19:06:40.544886Z"
    }
   },
   "outputs": [],
   "source": [
    "ensdf_headers = nuc_data.load_ensdf_headers()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:40.575889Z",
     "start_time": "2021-02-23T19:06:40.554886Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Element_w_A</th>\n",
       "      <th>A</th>\n",
       "      <th>Z</th>\n",
       "      <th>Number_of_Levels</th>\n",
       "      <th>Number_of_Gammas</th>\n",
       "      <th>N_max</th>\n",
       "      <th>N_c</th>\n",
       "      <th>Sn</th>\n",
       "      <th>Sp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1H</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2H</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.22457</td>\n",
       "      <td>2.22457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3H</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6.25723</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3He</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>5.49348</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4He</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>20.57762</td>\n",
       "      <td>19.81386</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Element_w_A  A  Z  Number_of_Levels  Number_of_Gammas  N_max  N_c        Sn  \\\n",
       "0         1H   1  1                 1                 0      1    1   0.00000   \n",
       "1         2H   2  1                 1                 0      1    1   2.22457   \n",
       "2         3H   3  1                 1                 0      1    1   6.25723   \n",
       "3         3He  3  2                 1                 0      1    1   0.00000   \n",
       "4         4He  4  2                16                 0      1   16  20.57762   \n",
       "\n",
       "         Sp  \n",
       "0   0.00000  \n",
       "1   2.22457  \n",
       "2   0.00000  \n",
       "3   5.49348  \n",
       "4  19.81386  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ensdf_headers.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Elemental RIPL Information\n",
    "\n",
    "We can easily load all available nuclear structure levels for a given isotope using the `load_ensdf_isotopic()`. It returns all levels and their energies, the spin, parity, half-life, gammas per level, a RIPL specific flag, and the number of decay modes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:40.593899Z",
     "start_time": "2021-02-23T19:06:40.576889Z"
    }
   },
   "outputs": [],
   "source": [
    "u236_levels = nuc_data.load_ensdf_isotopic(\"u236\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:40.608887Z",
     "start_time": "2021-02-23T19:06:40.595889Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Level_Number</th>\n",
       "      <th>Energy</th>\n",
       "      <th>Spin</th>\n",
       "      <th>Parity</th>\n",
       "      <th>Half_Life</th>\n",
       "      <th>Gammas</th>\n",
       "      <th>Flag</th>\n",
       "      <th>ENSDF_Spin</th>\n",
       "      <th>Num_Decay_Modes</th>\n",
       "      <th>Decay_Info</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>7.391000e+14</td>\n",
       "      <td>0</td>\n",
       "      <td>u</td>\n",
       "      <td>0+</td>\n",
       "      <td>2</td>\n",
       "      <td>=  1.0000E+02 %A      =  9.4000E-08 %SF       ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.0</td>\n",
       "      <td>0.045244</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.340000e-10</td>\n",
       "      <td>1</td>\n",
       "      <td>u</td>\n",
       "      <td>2+</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000  0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.0</td>\n",
       "      <td>0.149477</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.240000e-10</td>\n",
       "      <td>1</td>\n",
       "      <td>u</td>\n",
       "      <td>4+</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000  0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.0</td>\n",
       "      <td>0.309785</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.800000e-11</td>\n",
       "      <td>1</td>\n",
       "      <td>u</td>\n",
       "      <td>6+</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000  0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>0.522250</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.400000e-11</td>\n",
       "      <td>1</td>\n",
       "      <td>u</td>\n",
       "      <td>8+</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000  0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Level_Number    Energy  Spin  Parity     Half_Life  Gammas Flag ENSDF_Spin  \\\n",
       "0           1.0  0.000000   0.0       1  7.391000e+14       0    u         0+   \n",
       "1           2.0  0.045244   2.0       1  2.340000e-10       1    u         2+   \n",
       "2           3.0  0.149477   4.0       1  1.240000e-10       1    u         4+   \n",
       "3           4.0  0.309785   6.0       1  5.800000e-11       1    u         6+   \n",
       "4           5.0  0.522250   8.0       1  2.400000e-11       1    u         8+   \n",
       "\n",
       "   Num_Decay_Modes                                         Decay_Info  \n",
       "0                2  =  1.0000E+02 %A      =  9.4000E-08 %SF       ...  \n",
       "1                0                                        0.000000  0  \n",
       "2                0                                        0.000000  0  \n",
       "3                0                                        0.000000  0  \n",
       "4                0                                        0.000000  0  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "u236_levels.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Elemental RIPL Gammas\n",
    "\n",
    "We can also obtain the known gammas per level including their initial and final level state, the energy, the gamma and electromagnetic decay probability, and the ICC."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:40.629889Z",
     "start_time": "2021-02-23T19:06:40.609887Z"
    }
   },
   "outputs": [],
   "source": [
    "u235_gammas = nuc_data.load_ensdf_isotopic(\"u235\", filetype='gammas')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:40.704888Z",
     "start_time": "2021-02-23T19:06:40.693888Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Level_Record</th>\n",
       "      <th>Final_State</th>\n",
       "      <th>Energy</th>\n",
       "      <th>Gamma_Decay_Prob</th>\n",
       "      <th>Electromag_Decay_Prob</th>\n",
       "      <th>ICC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000000e-10</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.000000e+10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.013</td>\n",
       "      <td>9.990000e-04</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.000000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>4.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.046</td>\n",
       "      <td>1.515000e-02</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>6.500000e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.039</td>\n",
       "      <td>8.712000e-04</td>\n",
       "      <td>0.2709</td>\n",
       "      <td>3.100000e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>5.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.052</td>\n",
       "      <td>2.293000e-03</td>\n",
       "      <td>0.7291</td>\n",
       "      <td>3.170000e+02</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Level_Record  Final_State  Energy  Gamma_Decay_Prob  Electromag_Decay_Prob  \\\n",
       "2           2.0            1   0.000      1.000000e-10                 1.0000   \n",
       "4           3.0            2   0.013      9.990000e-04                 1.0000   \n",
       "6           4.0            1   0.046      1.515000e-02                 1.0000   \n",
       "8           5.0            3   0.039      8.712000e-04                 0.2709   \n",
       "9           5.0            2   0.052      2.293000e-03                 0.7291   \n",
       "\n",
       "            ICC  \n",
       "2  1.000000e+10  \n",
       "4  1.000000e+03  \n",
       "6  6.500000e+01  \n",
       "8  3.100000e+02  \n",
       "9  3.170000e+02  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "u235_gammas.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Ground State Data \n",
    "\n",
    "With the previous functions, you can obtain most of the basic nuclear structure data. Another commodity function offered by `NucML` is the `load_ensdf_ground_states()`. This will load only the ground state for all available isotopes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:40.779899Z",
     "start_time": "2021-02-23T19:06:40.759888Z"
    }
   },
   "outputs": [],
   "source": [
    "ground_states = nuc_data.load_ensdf_ground_states()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:40.806891Z",
     "start_time": "2021-02-23T19:06:40.794886Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Element_w_A</th>\n",
       "      <th>Spin</th>\n",
       "      <th>Parity</th>\n",
       "      <th>Half_Life</th>\n",
       "      <th>Flag</th>\n",
       "      <th>ENSDF_Spin</th>\n",
       "      <th>Num_Decay_Modes</th>\n",
       "      <th>Modifier</th>\n",
       "      <th>Decay_Info</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1H</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.0</td>\n",
       "      <td></td>\n",
       "      <td>1/2+</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2H</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.0</td>\n",
       "      <td></td>\n",
       "      <td>1+</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3H</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>388800000.0</td>\n",
       "      <td></td>\n",
       "      <td>1/2+</td>\n",
       "      <td>1</td>\n",
       "      <td>=</td>\n",
       "      <td>1.0000E+02 %B-                                ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3He</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.0</td>\n",
       "      <td></td>\n",
       "      <td>1/2+</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4He</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.0</td>\n",
       "      <td></td>\n",
       "      <td>0+</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Element_w_A  Spin  Parity    Half_Life Flag ENSDF_Spin  Num_Decay_Modes  \\\n",
       "0          1H   0.5       1         -1.0            1/2+                0   \n",
       "1          2H   1.0       1         -1.0              1+                0   \n",
       "2          3H   0.5       1  388800000.0            1/2+                1   \n",
       "3         3He   0.5       1         -1.0            1/2+                0   \n",
       "4         4He   0.0       1         -1.0              0+                0   \n",
       "\n",
       "  Modifier                                         Decay_Info  \n",
       "0                                                    0.000000  \n",
       "1                                                    0.000000  \n",
       "2        =  1.0000E+02 %B-                                ...  \n",
       "3                                                    0.000000  \n",
       "4                                                    0.000000  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ground_states.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## RIPL Cut-Off Parameters\n",
    "\n",
    "RIPL offers some recommended cut-off parameters for nuclear structure data. These will be useful when deciding the transformations applied to an ML-ready XUNDL dataset. For now, you can obtain the Cut-Off parameters using the `load_riple_parameteres()`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:41.438847Z",
     "start_time": "2021-02-23T19:06:41.422835Z"
    }
   },
   "outputs": [],
   "source": [
    "ripl_cutoff = nuc_data.load_ripl_parameters()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:41.841836Z",
     "start_time": "2021-02-23T19:06:41.823836Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Z</th>\n",
       "      <th>A</th>\n",
       "      <th>Element</th>\n",
       "      <th>Temperature_MeV</th>\n",
       "      <th>Temperature_U</th>\n",
       "      <th>Black_Shift</th>\n",
       "      <th>Black_Shift_U</th>\n",
       "      <th>N_Lev_ENSDF</th>\n",
       "      <th>N_Max_Lev_Complete</th>\n",
       "      <th>Min_Lev_Complete</th>\n",
       "      <th>Num_Lev_Unique_Spin</th>\n",
       "      <th>E_Max_N_Max</th>\n",
       "      <th>E_Num_Lev_U_Spin</th>\n",
       "      <th>Chi</th>\n",
       "      <th>Fit</th>\n",
       "      <th>Flag</th>\n",
       "      <th>Nox</th>\n",
       "      <th>Xm_Ex</th>\n",
       "      <th>Sigma</th>\n",
       "      <th>Element_w_A</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>n</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.0</td>\n",
       "      <td>1n</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>H</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.0</td>\n",
       "      <td>1H</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>H</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.0</td>\n",
       "      <td>2H</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>H</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.0</td>\n",
       "      <td>3H</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>He</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.0</td>\n",
       "      <td>3He</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Z  A Element  Temperature_MeV  Temperature_U  Black_Shift  Black_Shift_U  \\\n",
       "0  0  1       n              0.0            0.0          0.0            0.0   \n",
       "1  1  1       H              0.0            0.0          0.0            0.0   \n",
       "2  1  2       H              0.0            0.0          0.0            0.0   \n",
       "3  1  3       H              0.0            0.0          0.0            0.0   \n",
       "4  2  3      He              0.0            0.0          0.0            0.0   \n",
       "\n",
       "   N_Lev_ENSDF  N_Max_Lev_Complete  Min_Lev_Complete  Num_Lev_Unique_Spin  \\\n",
       "0            1                   1                 1                    1   \n",
       "1            1                   1                 1                    1   \n",
       "2            1                   1                 1                    1   \n",
       "3            1                   1                 1                    1   \n",
       "4            1                   1                 1                    1   \n",
       "\n",
       "   E_Max_N_Max  E_Num_Lev_U_Spin          Chi Fit Flag  Nox         Xm_Ex  \\\n",
       "0          0.0               0.0                          0                 \n",
       "1          0.0               0.0                          0                 \n",
       "2          0.0               0.0                          0                 \n",
       "3          0.0               0.0                          0                 \n",
       "4          0.0               0.0                          0                 \n",
       "\n",
       "   Sigma Element_w_A  \n",
       "0    0.0          1n  \n",
       "1    0.0          1H  \n",
       "2    0.0          2H  \n",
       "3    0.0          3H  \n",
       "4    0.0         3He  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ripl_cutoff.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## All RIPL/XUNDL Data\n",
    "\n",
    "You can also load all nuclear structure levels and their energies along with some basic information. It is a good place to get started building an ML-ready dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:42.252847Z",
     "start_time": "2021-02-23T19:06:42.151836Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:root:Reading data from C:/Users/Pedro/Desktop/ML_Nuclear_Data/ENSDF\\CSV_Files/ensdf.csv\n"
     ]
    }
   ],
   "source": [
    "ensdf = nuc_data.load_ensdf()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:42.323836Z",
     "start_time": "2021-02-23T19:06:42.310835Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Level_Number</th>\n",
       "      <th>Energy</th>\n",
       "      <th>Spin</th>\n",
       "      <th>Parity</th>\n",
       "      <th>Half_Life</th>\n",
       "      <th>Gammas</th>\n",
       "      <th>Flag</th>\n",
       "      <th>ENSDF_Spin</th>\n",
       "      <th>Num_Decay_Modes</th>\n",
       "      <th>Decay_Info</th>\n",
       "      <th>Element_w_A</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1/2+</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1H</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1+</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2H</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>388800000.0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1/2+</td>\n",
       "      <td>1</td>\n",
       "      <td>=  1.0000E+02 %B-                             ...</td>\n",
       "      <td>3H</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1/2+</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3He</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0+</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4He</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Level_Number  Energy  Spin  Parity    Half_Life  Gammas Flag ENSDF_Spin  \\\n",
       "0             1     0.0   0.5       1         -1.0       0  NaN       1/2+   \n",
       "1             1     0.0   1.0       1         -1.0       0  NaN         1+   \n",
       "2             1     0.0   0.5       1  388800000.0       0  NaN       1/2+   \n",
       "3             1     0.0   0.5       1         -1.0       0  NaN       1/2+   \n",
       "4             1     0.0   0.0       1         -1.0       0  NaN         0+   \n",
       "\n",
       "   Num_Decay_Modes                                         Decay_Info  \\\n",
       "0                0                                                0.0   \n",
       "1                0                                                0.0   \n",
       "2                1  =  1.0000E+02 %B-                             ...   \n",
       "3                0                                                0.0   \n",
       "4                0                                           0.000000   \n",
       "\n",
       "  Element_w_A  \n",
       "0          1H  \n",
       "1          2H  \n",
       "2          3H  \n",
       "3         3He  \n",
       "4         4He  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ensdf.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can also load a limited set of levels based on the RIPL cut-off parameters by specifying the `cutoff` argument:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:43.068911Z",
     "start_time": "2021-02-23T19:06:43.030309Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:root:Reading data from C:/Users/Pedro/Desktop/ML_Nuclear_Data/ENSDF\\CSV_Files/ensdf_cutoff.csv\n"
     ]
    }
   ],
   "source": [
    "ensdf_cutoff= nuc_data.load_ensdf(cutoff=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:43.223946Z",
     "start_time": "2021-02-23T19:06:43.218947Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(72667, 11)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ensdf.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:43.378959Z",
     "start_time": "2021-02-23T19:06:43.374960Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(21354, 11)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ensdf_cutoff.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## ML-ready RIPL Dataset\n",
    "\n",
    "Modeling nuclear structure is tricky. There are many ways we could prepare the dataset and model it using different algorithms and approaches. One option is using processing similar to that of EXFOR. We can achieve this using the `load_ensdf_ml()` method. \n",
    "\n",
    "**NOTE: This method is experimental and the returned data should always be inspected.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:44.219996Z",
     "start_time": "2021-02-23T19:06:43.773996Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:root:Dropping Ground State...\n",
      "INFO:root:AME: Reading and loading Atomic Mass Evaluation files from: \n",
      " C:/Users/Pedro/Desktop/ML_Nuclear_Data/AME/CSV_Files\\AME_all_merged_no_NaN.csv\n",
      "INFO:root:Dropping unnecessary features and one-hot encoding categorical columns...\n",
      "INFO:root:Splitting dataset into training and testing...\n",
      "INFO:root:Normalizing dataset...\n",
      "INFO:root:Fitting new scaler.\n",
      "INFO:root:Finished. Resulting dataset has shape (72138, 12), Training and Testing dataset shapes are (50496, 11) and (21642, 11) respesctively.\n"
     ]
    }
   ],
   "source": [
    "ensdf_ml, x_train, x_test, y_train, y_test, to_scale, scaler = nuc_data.load_ensdf_ml(\n",
    "    cutoff=False, log=True, append_ame=True, basic=1, num=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-02-23T19:06:44.355000Z",
     "start_time": "2021-02-23T19:06:44.342996Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Level_Number</th>\n",
       "      <th>Z</th>\n",
       "      <th>N</th>\n",
       "      <th>A</th>\n",
       "      <th>Atomic_Mass_Micro</th>\n",
       "      <th>Mass_Excess</th>\n",
       "      <th>Binding_Energy</th>\n",
       "      <th>B_Decay_Energy</th>\n",
       "      <th>S(2n)</th>\n",
       "      <th>S(n)</th>\n",
       "      <th>S(p)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2028</th>\n",
       "      <td>1.414973</td>\n",
       "      <td>-1.618364</td>\n",
       "      <td>-1.511965</td>\n",
       "      <td>-1.553747</td>\n",
       "      <td>-1.552763</td>\n",
       "      <td>1.144175</td>\n",
       "      <td>-0.214506</td>\n",
       "      <td>-3.507361</td>\n",
       "      <td>3.207512</td>\n",
       "      <td>3.279167</td>\n",
       "      <td>1.675159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63871</th>\n",
       "      <td>1.653213</td>\n",
       "      <td>1.208436</td>\n",
       "      <td>1.342290</td>\n",
       "      <td>1.292679</td>\n",
       "      <td>1.292933</td>\n",
       "      <td>0.767382</td>\n",
       "      <td>-1.213664</td>\n",
       "      <td>1.179749</td>\n",
       "      <td>-1.036423</td>\n",
       "      <td>-1.285178</td>\n",
       "      <td>0.293675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45732</th>\n",
       "      <td>1.462398</td>\n",
       "      <td>0.480321</td>\n",
       "      <td>0.478158</td>\n",
       "      <td>0.479414</td>\n",
       "      <td>0.478960</td>\n",
       "      <td>-0.595716</td>\n",
       "      <td>-0.212229</td>\n",
       "      <td>0.989262</td>\n",
       "      <td>-1.022829</td>\n",
       "      <td>-0.572432</td>\n",
       "      <td>-1.124873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58077</th>\n",
       "      <td>1.531479</td>\n",
       "      <td>0.951455</td>\n",
       "      <td>0.975689</td>\n",
       "      <td>0.967373</td>\n",
       "      <td>0.967281</td>\n",
       "      <td>0.121217</td>\n",
       "      <td>-0.833843</td>\n",
       "      <td>0.635374</td>\n",
       "      <td>-0.879278</td>\n",
       "      <td>-1.059364</td>\n",
       "      <td>-0.409278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58027</th>\n",
       "      <td>2.250420</td>\n",
       "      <td>0.951455</td>\n",
       "      <td>0.949503</td>\n",
       "      <td>0.951108</td>\n",
       "      <td>0.950984</td>\n",
       "      <td>0.065985</td>\n",
       "      <td>-0.803468</td>\n",
       "      <td>0.114818</td>\n",
       "      <td>-0.808407</td>\n",
       "      <td>-0.424349</td>\n",
       "      <td>-0.445178</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Level_Number         Z         N         A  Atomic_Mass_Micro  \\\n",
       "2028       1.414973 -1.618364 -1.511965 -1.553747          -1.552763   \n",
       "63871      1.653213  1.208436  1.342290  1.292679           1.292933   \n",
       "45732      1.462398  0.480321  0.478158  0.479414           0.478960   \n",
       "58077      1.531479  0.951455  0.975689  0.967373           0.967281   \n",
       "58027      2.250420  0.951455  0.949503  0.951108           0.950984   \n",
       "\n",
       "       Mass_Excess  Binding_Energy  B_Decay_Energy     S(2n)      S(n)  \\\n",
       "2028      1.144175       -0.214506       -3.507361  3.207512  3.279167   \n",
       "63871     0.767382       -1.213664        1.179749 -1.036423 -1.285178   \n",
       "45732    -0.595716       -0.212229        0.989262 -1.022829 -0.572432   \n",
       "58077     0.121217       -0.833843        0.635374 -0.879278 -1.059364   \n",
       "58027     0.065985       -0.803468        0.114818 -0.808407 -0.424349   \n",
       "\n",
       "           S(p)  \n",
       "2028   1.675159  \n",
       "63871  0.293675  \n",
       "45732 -1.124873  \n",
       "58077 -0.409278  \n",
       "58027 -0.445178  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This loader function offers less flexibility than the EXFOR counterpart. The same functionalities will hopefully be integrated in the future."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
